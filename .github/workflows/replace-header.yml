name: Replace All Headers

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  replace-header:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Replace headers safely (detailed per-file logging)
        shell: bash
        run: |
          set -e
          new_header=$(cat header.html)

          echo "üîß Starting header replacement (safe mode)..."

          find . -type f -name "*.html" -not -path "./.git/*" | while read -r file; do
            echo ""
            echo "‚Üí Processing $file"

            if grep -q "<header" "$file"; then
              cp "$file" "$file.bak"

              # Count how many <style> blocks with .dropdown exist before cleanup
              found_count=$(grep -Poz "(?s)<style>.*?\.dropdown.*?</style>" "$file" | grep -c "<style>" || true)
              echo "Found $found_count <style> block(s) containing .dropdown"

              # Remove duplicate dropdown-style blocks (keep first one)
              before=$(wc -l < "$file")
              perl -0777 -i -pe '{
                my %seen;
                s{
                  (<style>.*?\.dropdown.*?</style>)
                }{
                  $seen{$1}++ ? "" : $1
                }gsex
              }' "$file"
              after=$(wc -l < "$file")

              # Count how many still remain after cleanup
              remaining_count=$(grep -Poz "(?s)<style>.*?\.dropdown.*?</style>" "$file" | grep -c "<style>" || true)
              removed=$((found_count - remaining_count))

              echo "Removed $removed duplicate <style> block(s)"
              echo "Remaining $remaining_count unique dropdown <style> block(s)"

              # Replace header
              perl -0777 -i -pe "s|<header>.*?</header>|$new_header|gs" "$file"

              # Clean blank lines
              sed -i '/^$/N;/^\n$/D' "$file"

              echo "‚úÖ Cleaned successfully"
            else
              echo "‚ö†Ô∏è  No <header> found in $file ‚Äî skipped."
            fi
          done

          echo ""
          echo "‚úÖ Header replacement and cleanup complete (detailed logging)."

      - name: Commit and push if changes
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add .
          if git diff --cached --quiet; then
            echo "‚úÖ No changes to commit."
          else
            git commit -m "Automated header update via header.html (safe, detailed duplicate cleanup)"
            git push
            echo "üöÄ Header changes pushed successfully!"
          fi
