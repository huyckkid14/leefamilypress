name: Replace All Headers

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  replace-header:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Replace headers safely (final guaranteed fix)
        shell: bash
        run: |
          set -e
          new_header=$(cat header.html)

          echo "üîß Starting header replacement (guaranteed strict mode)..."

          find . -type f -name "*.html" -not -path "./.git/*" | while read -r file; do
            echo ""
            echo "‚Üí Processing $file"

            if grep -q "<header" "$file"; then
              cp "$file" "$file.bak"

              # Count how many dropdown style blocks exist before cleanup
              found_count=$(grep -Poz "(?s)<style[[:space:]]*[^>]*>.*?\.dropdown.*?</style>" "$file" | grep -c "<style>" || true)
              echo "Found $found_count <style> block(s) containing .dropdown"

              # 1Ô∏è‚É£ Remove all but the first dropdown-style block (handles newlines & \r\n safely)
              perl -0777 -i -pe '
                my $first = 0;
                s{
                  (<style\b[^>]*>\s*[\s\S]*?\.dropdown[\s\S]*?<\/style>)
                }{
                  if ($first++) { "" } else { $1 }
                }gsex
              ' "$file"

              # 2Ô∏è‚É£ Remove leftover empty <style></style> tags completely
              perl -0777 -i -pe 's|<style[^>]*>\s*</style>||g' "$file"

              # 3Ô∏è‚É£ Replace <header> with header.html contents
              perl -0777 -i -pe "s|<header>.*?</header>|$new_header|gs" "$file"

              # 4Ô∏è‚É£ Clean up blank lines left after removals
              sed -i '/^$/N;/^\n$/D' "$file"

              # Count remaining dropdown style blocks
              remaining_count=$(grep -Poz "(?s)<style[[:space:]]*[^>]*>.*?\.dropdown.*?</style>" "$file" | grep -c "<style>" || true)
              removed=$((found_count - remaining_count))
              if [ "$removed" -lt 0 ]; then removed=0; fi

              echo "Removed $removed duplicate <style> block(s)"
              echo "Remaining $remaining_count unique dropdown <style> block(s)"
              echo "‚úÖ Cleaned successfully"
            else
              echo "‚ö†Ô∏è  No <header> found in $file ‚Äî skipped."
            fi
          done

          echo ""
          echo "‚úÖ Header replacement and cleanup complete (guaranteed mode)."

      - name: Commit and push if changes
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add .
          if git diff --cached --quiet; then
            echo "‚úÖ No changes to commit."
          else
            git commit -m "Automated header update via header.html (strict, guaranteed cleanup)"
            git push
            echo "üöÄ Header changes pushed successfully!"
          fi
