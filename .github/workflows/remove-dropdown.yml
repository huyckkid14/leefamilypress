name: Replace Header and Remove Duplicate Styles

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  replace-and-clean:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 1Ô∏è‚É£ Replace the first <header>...</header> block with contents of header.html
      - name: Replace <header> block with header.html content (once per file)
        run: |
          echo "üîÑ Replacing <header>...</header> with header.html content..."
          for file in $(find . -type f -name "*.html"); do
            if grep -q "<header" "$file"; then
              # Only replace the FIRST <header>...</header> block
              awk -v rfile="header.html" '
                BEGIN { replaced = 0; while ((getline line < rfile) > 0) headerContent = headerContent line "\n"; close(rfile); }
                {
                  if (!replaced && match($0, /<header[^>]*>/)) {
                    print headerContent;
                    inHeader = 1;
                    replaced = 1;
                    next;
                  }
                  if (inHeader && match($0, /<\/header>/)) {
                    inHeader = 0;
                    next;
                  }
                  if (!inHeader) print $0;
                }
              ' "$file" > "$file.tmp" && mv "$file.tmp" "$file"
              echo "::notice file=$file::Header replaced."
            fi
          done
          echo "‚úÖ Header replacement complete."

      # 2Ô∏è‚É£ Commit the header replacement
      - name: Commit and push header replacements
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git diff --cached --quiet && echo "No header changes to commit." || (
            git commit -m "üîÑ Replace <header> with header.html contents (once per file)"
            git push
          )

      # 3Ô∏è‚É£ Remove duplicate dropdown styles (same logic you wrote)
      - name: Find and Clean ROBUST Duplicate Styles (Flexible Match)
        id: cleanup_step_robust
        run: |
          set -e
          TOTAL_REMOVED=0
          echo "üßπ Starting flexible duplicate cleanup..."

          find . -name "*.html" -type f -print0 | while IFS= read -r -d '' HTML_FILE; do
            perl -0777 -pe '
              BEGIN { our %seen; our $removed = 0; }

              s{
                (<style\b[^>]*>.*?</style>)
              }{
                my $block = $1;
                my $norm = $block;
                $norm =~ s/\s+/ /g;

                if ($norm =~ /\.dropdown\s*\{.*?display:\s*inline-block;.*?\}\s*\.dropdown-content/s) {
                  my $sig = "dropdown_signature";
                  if (!$seen{$sig}++) {
                    $block
                  } else {
                    $removed++;
                    ""
                  }
                } else {
                  $block
                }
              }egsx;

              END { print STDERR "::notice ::Removed $removed duplicate dropdown style block(s)\n"; }
            ' "$HTML_FILE" > "$HTML_FILE.tmp"

            if ! cmp -s "$HTML_FILE" "$HTML_FILE.tmp"; then
              mv "$HTML_FILE.tmp" "$HTML_FILE"
              echo "::notice file=${HTML_FILE}::Processed and cleaned."
              TOTAL_REMOVED=1
            else
              rm -f "$HTML_FILE.tmp"
            fi
          done

          echo "total_removed=${TOTAL_REMOVED}" >> "$GITHUB_OUTPUT"
          echo "‚úÖ Cleanup complete."

      # 4Ô∏è‚É£ Commit and push cleanup changes
      - name: Commit and push cleanup
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff --cached --quiet; then
            echo "No cleanup changes to commit."
          else
            git commit -m "üßπ Auto-clean duplicate dropdown styles after header replacement"
            git push
          fi
      # 5Ô∏è‚É£ Remove excessive blank lines and hidden whitespace (robust)
      - name: Remove excessive blank lines (>4) and hidden characters
        run: |
          echo "üßΩ Removing long blank line streaks and hidden whitespace..."
          FILECOUNT=0
          find . -type f -name "*.html" -print0 | while IFS= read -r -d '' FILE; do
            FILECOUNT=$((FILECOUNT+1))
            echo "üîß [${FILECOUNT}] Attempting to edit: $FILE"
            FILESIZE=$(stat -c%s "$FILE" 2>/dev/null || echo 0)
            echo "   ‚îî‚îÄ Size: ${FILESIZE} bytes"

            perl -CSD -0777 -pe '
              # Normalize all line endings
              s/\r\n/\n/g;
              s/\r/\n/g;

              # Convert Unicode separators to newline
              s/\x{2028}/\n/g;
              s/\x{2029}/\n/g;

              # Remove zero-width and BOM characters
              s/\x{200B}//g;
              s/\x{FEFF}//g;

              # Convert non-breaking spaces to normal space
              s/\x{00A0}/ /g;

              # Remove empty HTML comments (e.g. <!---->)
              s/^\s*<!--\s*-->\s*\n?//gm;
              s/^\s*<!-+>\s*\n?//gm;

              # Remove lines that contain only spaces or tabs
              s/^[ \t]*\n/\n/gm;

              # Collapse any long run of newlines (5+)
              s/\n{5,}/\n/g;
            ' "$FILE" > "$FILE.tmp"

            if ! cmp -s "$FILE" "$FILE.tmp"; then
              mv "$FILE.tmp" "$FILE"
              echo "‚úÖ Edited: $FILE"
            else
              rm -f "$FILE.tmp"
              echo "‚ö™ No changes needed: $FILE"
            fi
          done
          echo "‚úÖ Blank line & hidden whitespace cleanup complete."




      # 6Ô∏è‚É£ Commit and push blank line removal changes
      - name: Commit and push blank line cleanup
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff --cached --quiet; then
            echo "No blank line cleanup changes to commit."
          else
            git commit -m "üßΩ Remove excessive blank lines from HTML files"
            git push
          fi

