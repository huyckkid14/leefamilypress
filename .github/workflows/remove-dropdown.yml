name: Replace All Headers

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  replace-header:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Replace headers and add style (non-repeating)
        run: |
          set -e

          new_header='<header>
<h1>Lee Family Press</h1>
<nav>
<a href="https://leefamilypress.com/index.html">Home</a>
<a href="https://leefamilypress.com/works.html">Works</a>
<a href="https://leefamilypress.com/contact.html">Contact</a>
<div class="dropdown">
<a href="https://leefamilypress.com/index.html#">Authors ‚ñæ</a>
<div class="dropdown-content">
<a href="https://leefamilypress.com/authors/jun-hee-lee.html">Jun Hee Lee</a>
<a href="https://leefamilypress.com/authors/jaewon-lee.html">Jaewon Lee</a>
</div>
</div>
</nav>
</header>'

          style_block='<style>
.dropdown {
  position: relative;
  display: inline-block;
}
.dropdown-content {
  display: none;
  position: absolute;
  top: 100%;
  right: 0;
  left: auto;
  background: #222;
  padding: 0.5rem 0;
  border-radius: 6px;
  box-shadow: 0 4px 8px rgba(0,0,0,0.3);
  min-width: 180px;
  z-index: 1000;
}
.dropdown-content a {
  display: block;
  padding: 0.5rem 1rem;
  color: #ddd;
  text-decoration: none;
  transition: background 0.3s, color 0.3s;
}
.dropdown-content a:hover {
  background: #333;
  color: #ff6600;
}
.dropdown:hover .dropdown-content {
  display: block;
}
</style>'

          # Replace headers safely
          find . -type f -name "*.html" -not -path "./.git/*" | while read -r file; do
            echo "‚Üí Processing $file"

            # Only modify if file actually contains a header tag
            if grep -q "<header" "$file"; then
              cp "$file" "$file.bak"

              # Remove any duplicated header (if already replaced)
              perl -0777 -i -pe "s|<header>.*?</header>|$new_header|gs" "$file"
            fi

            # Insert style only if not already there
            if ! grep -q "dropdown-content" "$file"; then
              if grep -q "</head>" "$file"; then
                perl -0777 -i -pe "s|</head>|$style_block\n</head>|" "$file"
              else
                echo -e "$style_block\n$(cat "$file")" > "$file"
              fi
            fi
          done

      - name: Commit and push if changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff --cached --quiet; then
            echo "‚úÖ No changes."
          else
            git commit -m "Replace headers and ensure dropdown style"
            git push
          fi
      # 9Ô∏è‚É£ Remove duplicate <script>...</script> blocks that handle notice closing
      - name: Remove duplicate notice-close <script> blocks
        run: |
          set +e
          echo "üßπ Starting duplicate <script> cleanup for notice-close handler..."
          TOTAL_FILES=0
          TOTAL_DUPLICATES=0
          TOTAL_CHANGED=0

          find . -type f -name "*.html" -print0 | while IFS= read -r -d '' FILE; do
            ((TOTAL_FILES++))
            echo "üîç Checking: $FILE"

            perl -0777 -pe "
              BEGIN { our \$found = 0; our \$removed = 0; our \$log = \"\" }
              s{
                (<script>\\s*document\\.getElementById\\(\"close-notice\"\\)\\.addEventListener\\([^<]*?</script>)
              }{
                if (!\$found++) {
                  \$log .= '::debug ::Keeping first close-notice script block\\n';
                  \$1
                } else {
                  \$removed++;
                  \$log .= '::debug ::Removing duplicate close-notice script block #' . \$removed . '\\n';
                  ''
                }
              }egsx;
              END {
                print STDERR '::notice ::File processed. Found ' . \$found . ' close-notice script(s), removed ' . \$removed . '.\\n';
                print STDERR \$log if \$removed;
              }
            " "\$FILE" > "\$FILE.tmp"

            if ! cmp -s "\$FILE" "\$FILE.tmp"; then
              mv "\$FILE.tmp" "\$FILE"
              ((TOTAL_DUPLICATES++))
              ((TOTAL_CHANGED++))
              echo "‚úÖ Cleaned \$FILE ‚Äî duplicate close-notice script(s) removed."
            else
              rm -f "\$FILE.tmp"
              echo "‚ÑπÔ∏è  No duplicates found in \$FILE"
            fi
          done

          echo "--------------------------------------------"
          echo "üßæ Summary:"
          echo "üìÅ Files checked: \$TOTAL_FILES"
          echo "üóëÔ∏è  Files cleaned: \$TOTAL_CHANGED"
          echo "‚ôªÔ∏è  Total duplicate close-notice scripts removed: \$TOTAL_DUPLICATES"
          echo "‚úÖ Duplicate notice-close script cleanup complete."

      # üîü Commit and push duplicate script cleanup
      - name: Commit and push duplicate notice-close script cleanup
        run: |
          git config --global safe.directory "$GITHUB_WORKSPACE"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          echo "üßæ Git status before commit:"
          git status --porcelain

          git add '*.html' || true

          if git diff --cached --quiet; then
            echo "‚ÑπÔ∏è  No duplicate notice-close script changes to commit."
            exit 0
          fi

          git commit -m "üßπ Remove duplicate notice-close <script> blocks (auto)"
          git pull --rebase origin "${GITHUB_REF_NAME:-$GITHUB_HEAD_REF}" || true
          git push origin "HEAD:${GITHUB_REF_NAME:-$GITHUB_HEAD_REF}"

 
