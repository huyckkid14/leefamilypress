name: Remove Duplicate Dropdown Styles

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # allows manual run from Actions tab

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find and Clean ROBUST Duplicate Styles (Flexible Match)
        id: cleanup_step_robust
        run: |
          set -e
          TOTAL_REMOVED=0
          echo "Starting flexible duplicate cleanup..."

          # Find all .html files recursively
          find . -name "*.html" -type f -print0 | while IFS= read -r -d '' HTML_FILE; do

            # Use Perl to identify and remove duplicate <style> blocks
            perl -0777 -pe '
              BEGIN { our %seen; our $removed = 0; }

              s{
                (<style\b[^>]*>.*?</style>)  # Capture <style>...</style> blocks
              }{
                my $block = $1;
                my $norm = $block;
                $norm =~ s/\s+/ /g;   # normalize whitespace for comparison

                # Detect dropdown style blocks loosely (contains both .dropdown and .dropdown-content)
                if ($norm =~ /\.dropdown\s*\{.*?display:\s*inline-block;.*?\}\s*\.dropdown-content/s) {
                  my $sig = "dropdown_signature";
                  if (!$seen{$sig}++) {
                    $block   # keep the first
                  } else {
                    $removed++;
                    ""       # remove duplicates
                  }
                } else {
                  $block     # keep non-dropdown styles
                }
              }egsx;

              END {
                print STDERR "::notice ::Removed $removed duplicate dropdown style block(s)\n";
              }
            ' "$HTML_FILE" > "$HTML_FILE.tmp"

            # Replace file only if changed
            if ! cmp -s "$HTML_FILE" "$HTML_FILE.tmp"; then
              mv "$HTML_FILE.tmp" "$HTML_FILE"
              echo "::notice file=${HTML_FILE}::Processed and cleaned."
              TOTAL_REMOVED=1
            else
              rm -f "$HTML_FILE.tmp"
            fi
          done

          echo "total_removed=${TOTAL_REMOVED}" >> "$GITHUB_OUTPUT"
